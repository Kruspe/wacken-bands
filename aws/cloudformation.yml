AWSTemplateFormatVersion: "2010-09-09"
Description: Wacken scrapper resources
Parameters:
  BandBucketArn:
    Type: AWS::SSM::Parameter::Value<String>
  BandBucketName:
    Type: AWS::SSM::Parameter::Value<String>
  DeploymentBucketName:
    Type: AWS::SSM::Parameter::Value<String>
  ParamWackenVersion:
    Type: String

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
      - PolicyName: UploadToS3
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: 's3:PutObject'
            Resource: !Join [ "", [ !Ref BandBucketArn, "/wacken.json" ] ]
      - PolicyName: GetSsmParameters
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: 'ssm:GetParameters'
            Resource:
            - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/spotify/client-id
            - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/spotify/client-secret
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: wackenBands
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt [ LambdaExecutionRole, Arn ]
      Timeout: 60
      Environment:
        Variables:
          FESTIVAL_BANDS_BUCKET: !Ref BandBucketName
          SPOTIFY_CLIENT_ID_PARAMETER_NAME: /spotify/client-id
          SPOTIFY_CLIENT_SECRET_PARAMETER_NAME: /spotify/client-secret
      Code:
        S3Bucket: !Ref DeploymentBucketName
        S3Key: wacken.zip
        S3ObjectVersion: !Ref ParamWackenVersion

  CronJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action:
          - 'sts:AssumeRole'
      Policies:
      - PolicyName: ExecuteWackenBandsLambda
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: 'lambda:InvokeFunction'
            Resource: !GetAtt [ Lambda, Arn ]
  LambdaCronJob:
    Type: AWS::Events::Rule
    Properties:
      Name: WackenBandsLamdaTrigger
      ScheduleExpression: cron(0 9,20 * * ? *)
      RoleArn: !GetAtt [ CronJobRole, Arn ]
      Targets:
      - Arn: !GetAtt [ Lambda, Arn ]
        Id: "Wacken-Bands-Lambda"